name: tag-release
on:
  workflow_dispatch:
jobs:
  build:
    strategy:
      fail-fast: false
      include:
        - os: macos-latest
          target: x86_64-apple-darwin
          strip: strip -x # Must use -x on macOS. This produces larger results on linux.
        - os: windows-latest
          target: x86_64-pc-windows-msvc
        - os: ubuntu-latest
          image: docker.pkg.github.com/napi-rs/napi-rs/rust-nodejs-alpine:lts
          target: arm-unknown-linux-gnueabihf
          arch: armhf
          strip: arm-linux-gnueabihf-strip
        - os: ubuntu-latest
          image: docker.pkg.github.com/napi-rs/napi-rs/rust-nodejs-alpine:lts
          target: aarch64-unknown-linux-gnu
          arch: arm64
          strip: aarch64-linux-gnu-strip

    name: ${{ matrix.os }}-${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    container:
      if: ${{ matrix.image }}
      image: ${{ matrix.image }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_TOKEN }}
    steps:
      - uses: actions/checkout@v1
      - name: Install Node.JS
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - name: Install linux toolchain
        if: ${{ matrix.strip }}
        run: |
          sudo apt-get update
          sudo apt-get install gcc-arm-linux-gnueabihf gcc-aarch64-linux-gnu g++-aarch64-linux-gnu -y

      - name: Install musl linux toolchain
        if: ${{ matrix.target == 'aarch64-unknown-linux-musl' }}
        run: |
          sudo apt-get update
          sudo apt-get install gcc-arm-linux-gnueabihf gcc-aarch64-linux-gnu g++-aarch64-linux-gnu -y

      - uses: bahmutov/npm-install@v1.1.0
        env:
          RUST_TARGET: ${{ matrix.target }}
      - name: Transpile JavaScript
        run: yarn run transpile
      - name: Build node release
        run: yarn run build:node-release
      - name: Strip debug symbols # https://github.com/rust-lang/rust/issues/46034
        if: ${{ matrix.strip }}
        run: ${{ matrix.strip }} parcel_sourcemap_node/artifacts/*.node
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: bindings-${{ matrix.target }}
          path: parcel_sourcemap_node/artifacts/*.node

  # build-linux-gnu-x64:
  #   name: linux-gnu-x64
  #   runs-on: ubuntu-latest
  #   container:
  #     image: docker.io/centos/nodejs-12-centos7
  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: Install yarn
  #       run: npm install --global yarn@1
  #     - name: Install Rust
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable
  #         profile: minimal
  #         override: true
  #     - name: Link native packages
  #       run: node scripts/link-native.js
  #     - uses: bahmutov/npm-install@v1.1.0
  #     - name: Strip debug symbols # https://github.com/rust-lang/rust/issues/46034
  #       run: strip native-packages/*/*.node
  #     - name: Upload artifacts
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: bindings-linux-gnu-x64
  #         path: native-packages/*/*.node
  #     - name: debug
  #       run: ls -l native-packages/*/*.node
  #     - name: Smoke test
  #       run: node -e 'require("@parcel/fs-search")'

  # build-linux-gnu-arm:
  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: Install Rust
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable
  #         profile: minimal
  #         override: true
  #         target: ${{ matrix.target }}
  #     - name: Link native packages
  #       run: node scripts/link-native.js
  #     - uses: bahmutov/npm-install@v1.1.0
  #       env:
  #         RUST_TARGET: ${{ matrix.target }}
  #     - name: Strip debug symbols # https://github.com/rust-lang/rust/issues/46034
  #       run: ${{ matrix.strip }} native-packages/*/*.node
  #     - name: Upload artifacts
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: bindings-${{ matrix.target }}
  #         path: native-packages/*/*.node

  # build-apple-silicon:
  #   name: aarch64-apple-darwin
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: Install Rust
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: nightly
  #         profile: minimal
  #         override: true
  #         target: aarch64-apple-darwin
  #     - name: Link native packages
  #       run: node scripts/link-native.js
  #     - uses: bahmutov/npm-install@v1.1.0
  #       env:
  #         RUST_TARGET: aarch64-apple-darwin
  #     - name: Strip debug symbols
  #       run: strip -x native-packages/*/*.node
  #     - name: Upload artifacts
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: bindings-apple-aarch64
  #         path: native-packages/*/*.node
  #     - name: debug
  #       run: ls -l native-packages/*/*.node

  release:
    runs-on: ubuntu-latest
    name: Build and release
    needs:
      - build
    steps:
      - uses: actions/checkout@v1
      - name: Link native packages
        run: node scripts/link-native.js
      - uses: bahmutov/npm-install@v1.1.0
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: parcel_sourcemap_node/artifacts
      - name: Debug
        run: ls -l parcel_sourcemap_node/artifacts
      - run: echo //registry.npmjs.org/:_authToken=${NPM_TOKEN} > .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - run: yarn release
